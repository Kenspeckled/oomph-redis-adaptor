// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, findBy, redisFind;

  redisFind = require('./find');

  Promise = require('promise');

  findBy = function(option) {
    var p;
    p = new Promise((function(_this) {
      return function(resolve, reject) {
        var condition, optionName, stringName;
        optionName = Object.keys(option)[0];
        condition = option[optionName];
        if (optionName === 'id') {
          return resolve(condition);
        } else {
          if (_this.classAttributes[optionName].dataType === 'string' && (_this.classAttributes[optionName].identifiable || _this.classAttributes[optionName].url)) {
            stringName = _this.className + "#" + optionName + ":" + condition;
            return _this.redis.get(stringName, function(err, res) {
              return resolve(res);
            });
          } else {
            return reject((function() {
              throw new Error("Not an identifier");
            })());
          }
        }
      };
    })(this));
    return p.then((function(_this) {
      return function(res) {
        return redisFind.apply(_this, [res]);
      };
    })(this));
  };

  module.exports = findBy;

}).call(this);
